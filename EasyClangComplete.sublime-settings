{
  // SETTINGS FOR EASY_CLANG_COMPLETE.

  // Specify common flags that will be passed to clang for EVERY build.
  "common_flags" : [
    // some example includes
    "-I/usr/include",
    "-I$project_base_path/src",
    // this is needed to include the correct headers for clang
    "-I/usr/lib/clang/$clang_version/include",
  ],
  // C specific flags. Prepend common_flags for C files.
  "c_flags" : [ "-std=c11" ],
  // C++ specific flags. Prepend common_flags for C++ files.
  "cpp_flags" : [ "-std=c++11" ],
  // Objective-C specific flags. Prepend common_flags for Objective-C files.
  "objective_c_flags" : [ "-std=c11" ],
  // Objective-C++ specific flags. Prepend common_flags for Objective-C++ files.
  "objective_cpp_flags" : [ "-std=c++11" ],

  // Define how we search needed flags. Prioritized from top to bottom.
  // Every entry has an option:
  //  - "search_in": <path>  <-- a path to the folder containing the file.
  //
  // "cmake" entry has additional options:
  //  - "flags": [<flags>]        <-- Additional flags to pass to cmake.
  //  - "prefix_paths": [<paths>] <-- array of folders that should be
  //                                  appended to CMAKE_PREFIX_PATHS before
  //                                  cmake is run.
  "flags_sources": [
    {"file": "CMakeLists.txt"},
    {"file": "compile_commands.json"},
    {"file": ".clang_complete"},
  ],

  // Show compile errors in this style on file save.
  // Possible styles: "popups", "phantoms", "none"
  "errors_style": "none",

  // Show gutter icon for highlighted errors on the side bar.
  // Possible styles: "color", "mono", "none"
  "gutter_style": "color",

  // Use libclang.
  // If set to false will use clang_binary and parse the output of
  // `clang_binary -Xclang -code-complete-at...` instead.
  "use_libclang" : true,

  // make plugin verbose
  "verbose" : false,

  // Show additional information on hover over function call/variable etc.
  // This replaces default sublime on hover behaviour
  "show_type_info": true,

  // Show body of struct/class/typedef declaration.
  "show_type_body" : true,

  // hide the completions generated by other plugins
  "hide_default_completions": true,

  // Pick the progress style. There are currently these styles available:
  // - "ColorSublime" : 'â£¾â£½â£»â¢¿â¡¿â£Ÿâ£¯â£·'
  // - "Moon"         : 'ðŸŒ‘ðŸŒ’ðŸŒ“ðŸŒ”ðŸŒ•ðŸŒ–ðŸŒ—ðŸŒ˜'
  // - "None"
  "progress_style": "Moon",
}
